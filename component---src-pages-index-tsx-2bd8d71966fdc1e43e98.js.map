{"version":3,"sources":["webpack:///./src/utils/getLastPushTime.ts","webpack:///./src/pages/index.tsx","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./src/data/installers.yml"],"names":["getLastPushTime","asyncToGenerator_default","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","isBrowser","abrupt","window","fetch","method","headers","Accept","User-Agent","navigator","userAgent","then","res","json","catch","sent","pushed_at","stop","IndexPage","state","lastBuildDate","Date","componentDidMount","date","_this","setState","render","Object","core_browser_esm","layouts_default","css","css_browser_esm","display","flexDirection","justifyContent","alignItems","minHeight","backgroundColor","COLORS","BLACK","color","WHITE","textAlign","Logo","size","_ref","_ref2","_ref3","toDateString","_ref4","installers","map","installer","i","key","href","link","_ref5","os","target","title","React","PureComponent","runtime","exports","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","name","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","__webpack_require__","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"component---src-pages-index-tsx-2bd8d71966fdc1e43e98.js","sourcesContent":["import isBrowser from \"./isBrowser\";\n\nexport default async () => {\n    if (!isBrowser()) return;\n\n    let response = await window.fetch(\"https://api.github.com/repos/PrismLang/binaries\", {\n        method: \"GET\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"User-Agent\": window.navigator.userAgent,\n        },\n    }).then(res => res.json()).catch(() => {});\n\n    return response.pushed_at;\n};\n","import React from \"react\";\n\nimport Layout from \"../layouts/default\";\nimport Logo from \"../components/Logo\";\nimport { COLORS } from \"../utils/constants\";\nimport getLastPushTime from \"../utils/getLastPushTime\";\n\nimport installers from \"../data/installers.yml\";\n\nclass IndexPage extends React.PureComponent {\n    state = {\n        lastBuildDate: new Date(0),\n    };\n\n    componentDidMount = () => {\n        getLastPushTime()\n        .then(date => this.setState({ lastBuildDate: new Date(date) }))\n        .catch(() => {});\n    }\n\n    render = () => (\n        <Layout>\n            <div css={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                minHeight: \"calc(100vh - 72px)\",\n                backgroundColor: COLORS.BLACK,\n                color: COLORS.WHITE,\n                textAlign: \"center\",\n            }}>\n                <Logo size=\"200\" />\n                <div css={{\n                    padding: 25,\n                    fontSize: \"2em\",\n                }}>\n                    PRISM\n                </div>\n                <div css={{\n                    maxWidth: 500,\n                    padding: 25,\n                }}>\n                    Prism is a language that was born in the wild and raised in the darkness\n                    by a schizophrenic monkey. It is held together by duct tape and cracked\n                    asbestos-filled spackle. But it has got <code>character</code>; and in\n                    this world, that's enough.\n                </div>\n            </div>\n\n            <div css={{\n                margin: \"0 auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                maxWidth: 1000,\n                padding: 25,\n                minHeight: \"50vh\",\n            }}>\n                <h2>Downloads</h2>\n                <p>\n                    Prism is currently in prototype. It will soon be released and made open-source.\n                    But if you're someone who lives on the edge and is very curious to try it out,\n                    you can download the prototype version for your platform and start using it.\n                </p>\n                <p>\n                    The binaries are updated on a regular basis. Keep track of the release date and\n                    use these installers to update Prism every time a new version comes out to stay\n                    on the latest version of Prism and get access to all latest features.\n                </p>\n                <p>\n                    <strong>\n                        To install Prism in your computer, run these installers as superuser/Administrator.\n                    </strong>\n                </p>\n                <p>\n                    <strong>\n                        {\n                            this.state.lastBuildDate\n                            ? \"Last Updated on \" + this.state.lastBuildDate.toDateString()\n                            : null\n                        }\n                    </strong>\n                </p>\n                <div css={{\n                    marginTop: 25,\n                    marginBottom: 25,\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \"center\",\n                }}>\n                    {\n                        installers.map((installer: any, i: number) => (\n                            <a key={ i } href={ installer.link } css={{\n                                margin: 10,\n                            }}>\n                                <button>\n                                    { installer.os }\n                                </button>\n                            </a>\n                        ))\n                    }\n                </div>\n                <p>\n                    If you don't prefer the installer, you can grab the Prism binaries from\n                    <a href=\"https://github.com/PrismLang/binaries\" target=\"_blank\" title=\"Prism binaries\"> here </a>\n                    and run it from wherever you like.\n                </p>\n            </div>\n        </Layout>\n    );\n}\n\nexport default IndexPage;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = [{\"os\":\"Linux\",\"link\":\"https://github.com/PrismLang/installer/raw/master/builds/prism-installer-linux\"},{\"os\":\"macOS\",\"link\":\"https://github.com/PrismLang/installer/raw/master/builds/prism-installer-darwin\"},{\"os\":\"Windows\",\"link\":\"https://github.com/PrismLang/installer/raw/master/builds/prism-installer-windows.exe\"}]"],"sourceRoot":""}